#!/bin/bash
# Harmony Activity launcher
#

[ ! -r /etc/default/harmony ] && echo "Harmony Remote Daemon not installed, please run hrmy-setup."  && exit 1
. /etc/default/harmony

if [ ! -e $prefix/usr/lib/harmony/utils ]; then
    echo "$(basename ${BASH_SOURCE[0]}) cannot find libraries." >&2
    exit 1
fi
. $prefix/usr/lib/harmony/utils

[ -n "$logfile" ] || logfile=/tmp/harmony.log

if ! echo $PATH | grep -q "lib/harmony"; then
    export DISPLAY=:0
    export PATH=$prefix/bin:$prefix/usr/lib/harmony:$PATH
    export logfile
fi

self=$(basename ${BASH_SOURCE[0]})

on_usage(){
    echo "Harmony Remote Daemon Launcher"
    echo "----------------------------------------------------------------"
    echo "  usage: $self <action> [param]"
    echo "    start    <activity>           Start an activity"
    echo "    stop     [activity]           Stops an activity"
    echo "    send     <ir_command>         Sends a command (ON|OFF ...)"
    echo "    daemon   <start|stop|restart> Sends commands to the harmonyd"
    echo "    help                          This help"
    echo "----------------------------------------------------------------"
    exit 1
}

on_daemon_start(){
    cmd pidof -x harmonyd || $prefix/usr/lib/harmony/harmonyd &
    while ! cmd pidof -x harmonyd; do
        sleep .2
    done    
    return 0
}
on_daemon_stop(){
    local pid
    if [ -r "$userspace/harmonyd.pid" ]; then
        pid=$(cat "$userspace/harmonyd.pid")
        [ -n "$pid" ] || return 1
        cmd kill $pid
        while cmd ps -p $pid; do
            sleep .2
        done
    fi
    return $0
}

on_start(){
    local act current
    current=`activity.name`
    act="$1"
    [ -n "$act" ] || return 1
    [ "$act" == "$current" ] && return 1
    [ -n "$current" ] && trigger stop
    trigger lock
    hrmy-activity $act
    return $?
}

on_stop(){
    local current pid act
    act="$2"
    current=`activity.name`
    pid=`activity.pid`
    if [ -n "$current" ]; then
        if [ -z "$act" ] || [ "$act" == "$current" ]; then
            trigger lock
            cmd kill $pid
            while cmd ps -p $pid; do
                sleep .2
            done
            return 0
        fi    
    fi
    return 1
}

on_send(){
    hmry-send $2
    return $?
}

on_lock(){
    cmd touch $lockfile
    lockset=1
}

on_exit(){
    [ $lockset == 1 ] && cmd rm $lockfile
}


cmd pidof -x harmonyd || trigger daemon_start
[ -n "$1" ] || exit 0

export HARMONY_ENVIRONNEMENT_LOADED=1

#avoid loop starts
lockfile=$userspace/harmony.lock
lock=0
lockset=0

[ -e "$lockfile" ] && lock=1

. activity

trap on_exit EXIT

case "$1" in
    start|send)
        [ $lock == 1 ] && exit 1
        [ -n "$2" ] || trigger usage
        trigger $1 $2
        exit $?
    ;;
    stop)
        [ $lock == 1 ] && exit 1
        trigger stop $2
        exit $?
    ;;
    daemon)
        unset HARMONY_ENVIRONNEMENT_LOADED
        case "$2" in
            start)
                trigger daemon_start
            ;;
            stop)
                trigger daemon_stop
                exit $?
            ;;
            restart)
                trigger daemon_stop
                trigger daemon_start
            ;;
            *)
                trigger usage
            ;;
        esac    
    ;;
    *|help)
        trigger usage
    ;;
esac
exit 0