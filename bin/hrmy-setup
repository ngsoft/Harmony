#!/usr/bin/sudo /bin/bash

prefix=$(dirname "$(pushd $(dirname "${BASH_SOURCE[0]}") > /dev/null 2>&1 && pwd && popd > /dev/null 2>&1)")
logfile="/tmp/$(basename ${BASH_SOURCE[0]}).log"
description="Harmony Remote Daemon"
OVERRIDE=no
binaries="harmony hrmy hrmy-send flirc-fix"

if [ ! -e $prefix/usr/lib/harmony/utils ]; then
    echo "$(basename ${BASH_SOURCE[0]}) cannot find libraries." >&2
    exit 1
fi
. $prefix/usr/lib/harmony/utils


#
# install_service <filename> <name>
#
install_service(){
    local name
    [ -n "$1" ] || [ -x "$1" ] ||  return 1
    name=$2
    [ -n "$name" ] || name=$(basename $1)
    [ -e "/etc/init.d/$name" ] && return 2
    cmd ln -s $1 /etc/init.d/$name
    cmd update-rc.d $name defaults
    cmd service $name start
}


#
# remove_service <name>
#
remove_service(){
	[ -n "$1" ] || return 1
    [ -e "/etc/init.d/$1" ] || return 2
	cmd update-rc.d -f $1 remove
	cmd systemctl stop $1
	cmd rm /etc/init.d/$1
	cmd systemctl disable $1 > /dev/null 2>&1
	cmd systemctl daemon-reload > /dev/null 2>&1
	cmd systemctl reset-failed > /dev/null 2>&1
}

#
# Install dependencies required for the app to run
# also remove older versions
#
install_deps(){
    echo "Installing dependencies, please wait ..."
    apt-get -y purge lirc lirc-x inputlirc flirc >> $logfile 2>&1
    apt-get -y --purge autoremove >> $logfile 2>&1
    cmd rm -fr /etc/lirc
    add-apt-repository -y -u ppa:leamas-alec/lirc-0.9.4 >> $logfile 2>&1
    echo "deb [trusted=yes] https://apt.fury.io/flirc/ /" > "/etc/apt/sources.list.d/flirc_fury.list"
    cmd apt-get update 
    apt-get -y install lirc lirc-x flirc xdotool >> $logfile 2>&1
    test -x /usr/sbin/lircd && return 0
    return 1
}

#
# Removes dependencies
#
remove_deps(){
    echo "Removing dependencies, please wait..."
    apt-get -y purge lirc lirc-x inputlirc flirc xdotool >> $logfile 2>&1
    apt-get -y --purge autoremove >> $logfile 2>&1
    cmd rm -fr /etc/lirc
    add-apt-repository -r -y ppa:leamas-alec/lirc-0.9.4 >> $logfile 2>&1
    cmd rm "/etc/apt/sources.list.d/flirc_fury.list"
    cmd apt-get update
}

enable_services(){
    local service act
    for service in $@; do
        [ -x /etc/init.d/$service ] && cmd update-rc.d $service defaults 
        echo "Enabling $service service."
        for act in unmask enable; do
            systemctl $act $service >> $logfile 2>&1
        done
    done
    cmd systemctl daemon-reload >> $logfile 2>&1
	cmd systemctl reset-failed >> $logfile 2>&1
}

disable_services(){
    local service act
    for service in $@; do
        echo "Disabling $service service."
        [ -x /etc/init.d/$service ] && cmd update-rc.d -f $service remove
        for act in stop disable mask; do
            systemctl $act $service >> $logfile 2>&1
        done
        
    done
    cmd systemctl daemon-reload >> $logfile 2>&1
	cmd systemctl reset-failed >> $logfile 2>&1
}


create_cfg_file(){
    printf "#\n# File autogenerated by hrmy-setup\n#\n" > /etc/default/harmony
    echo "prefix=\"$prefix\"" >> /etc/default/harmony
    echo "device=\"$(get_device)\"" >> /etc/default/harmony
    echo "device_name=\"$(get_device_name)\"" >> /etc/default/harmony
}

install_binaries(){
    local bin dest orig
    for bin in $@; do
        echo "Installing $bin"
        orig=$prefix/bin/$bin
        dest=/usr/local/bin/$bin
        [ -e "$dest" ] || ln -s $orig $dest
    done
}

remove_binaries(){
    local bin dest
    for bin in $@; do
        echo "Removing $bin"
        dest=/usr/local/bin/$bin
        [ -e "$dest" ] && cmd rm $dest
    done
}

add_keymaps(){
    [ -z "$1" ] || [ -e "$1" ] || return 1
    rm_keymaps
    cmd ln -s $1 /etc/lirc/lircd.conf.d/000flirc.conf
}

rm_keymaps(){
    cmd rm /etc/lirc/lircd.conf.d/000flirc.conf
}


if echo "$@" | grep "\-r" > /dev/null 2>&1; then
    if ask "Do you want to remove $description ?" N; then
        echo "A log file is being created at $logfile";
        cmd rm $logfile
        touch $logfile
        notify "Removing $description, please wait..."
        echo "Removing /etc/default/harmony"
        cmd rm /etc/default/harmony
        remove_binaries $binaries
        rm_keymaps
        echo "Removing service flirc"
        remove_service flirc
        enable_services lircd-setup lircd-uinput lircdm irexec lircd
        if ask "Do you want to remove dependencies (lirc lirc-x xdotool flirc) ?" Y; then
            remove_deps
        fi
        echo "All done, please reboot."
        notify "$description, uninstallation complete."
    fi
    exit 0
fi


if [ -z "$(get_device)" ]; then
    throw_error "Cannot find Flirc device."
fi

if ask "Do you want to install $description ?" Y; then
	notify "Installing $description, please wait"
    echo "A log file is being created at $logfile";
    cmd rm $logfile
    touch $logfile
    if ask "Do you want to install dependencies (lirc lirc-x xdotool flirc) ?" Y; then
        install_deps || throw_error "Cannot install dependencies"
    fi
    add_keymaps $prefix/etc/lirc/flirc.conf
    disable_services lircd-setup lircd-uinput lircdm irexec lircd
    echo "Installing service flirc"
    install_service $prefix/etc/init.d/flirc flirc
    echo "Installing configuration file /etc/default/harmony"
    create_cfg_file
    install_binaries $binaries
    echo "All done, please reboot."
    notify "$description, installation complete."
fi
